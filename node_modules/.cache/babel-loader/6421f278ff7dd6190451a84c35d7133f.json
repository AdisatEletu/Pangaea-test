{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { CartContext } from \"../contexts/CartContext\";\nimport { ProductContext } from \"../contexts/ProductContext\";\n\nconst useCart = () => {\n  _s();\n\n  const {\n    cartItems,\n    dispatch,\n    currency\n  } = useContext(CartContext);\n  const {\n    getProducts\n  } = useContext(ProductContext);\n\n  const doAddItem = product => {\n    dispatch({\n      type: \"add_item\",\n      product\n    });\n  };\n\n  const doRemoveItem = id => {\n    dispatch({\n      type: \"remove_item\",\n      id\n    });\n  };\n\n  const doDecrementQuantity = id => {\n    dispatch({\n      type: \"decrement_item\",\n      id\n    });\n  };\n\n  const doIncrementQuantity = id => {\n    const currentProduct = cartItems.find(item => item.product.id === id);\n\n    if (currentProduct) {\n      dispatch({\n        type: \"add_item\",\n        product: currentProduct.product\n      });\n    }\n  };\n\n  const doGetCartTotal = () => {\n    return cartItems.reduce((acc, cur) => acc += cur.product.price * cur.quantity, 0);\n  };\n\n  const doChangeCurrency = async currency => {\n    const products = await getProducts(currency);\n    dispatch({\n      type: \"change_currency\",\n      currency,\n      products\n    });\n  };\n\n  return {\n    doAddItem,\n    doRemoveItem,\n    doDecrementQuantity,\n    cartItems,\n    doChangeCurrency,\n    doGetCartTotal,\n    currency,\n    dispatch,\n    doIncrementQuantity\n  };\n};\n\n_s(useCart, \"7i/h6LF8ziZaCSTHkdR5K7v0OEY=\");\n\nexport default useCart;","map":{"version":3,"sources":["/Users/softcom/Documents/pangea-test/src/hooks/useCart.tsx"],"names":["useContext","CartContext","ProductContext","useCart","cartItems","dispatch","currency","getProducts","doAddItem","product","type","doRemoveItem","id","doDecrementQuantity","doIncrementQuantity","currentProduct","find","item","doGetCartTotal","reduce","acc","cur","price","quantity","doChangeCurrency","products"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAoCN,UAAU,CAACC,WAAD,CAApD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBP,UAAU,CAACE,cAAD,CAAlC;;AAEA,QAAMM,SAAS,GAAIC,OAAD,IAAuB;AACvCJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,UADC;AAEPD,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;;AAOA,QAAME,YAAY,GAAIC,EAAD,IAAgB;AACnCP,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPE,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,mBAAmB,GAAID,EAAD,IAAgB;AAC1CP,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,gBADC;AAEPE,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;;AAOA,QAAME,mBAAmB,GAAIF,EAAD,IAAgB;AAC1C,UAAMG,cAAc,GAAGX,SAAS,CAACY,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACR,OAAL,CAAaG,EAAb,KAAoBA,EAA7C,CAAvB;;AACA,QAAIG,cAAJ,EAAoB;AAClBV,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,UADC;AAEPD,QAAAA,OAAO,EAAEM,cAAc,CAACN;AAFjB,OAAD,CAAR;AAID;AACF,GARD;;AAUA,QAAMS,cAAc,GAAG,MAAc;AACnC,WAAOd,SAAS,CAACe,MAAV,CACL,CAACC,GAAD,EAAMC,GAAN,KAAeD,GAAG,IAAIC,GAAG,CAACZ,OAAJ,CAAYa,KAAZ,GAAoBD,GAAG,CAACE,QADzC,EAEL,CAFK,CAAP;AAID,GALD;;AAOA,QAAMC,gBAAgB,GAAG,MAAOlB,QAAP,IAA4B;AACnD,UAAMmB,QAAoB,GAAG,MAAMlB,WAAW,CAACD,QAAD,CAA9C;AACAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,iBADC;AAEPJ,MAAAA,QAFO;AAGPmB,MAAAA;AAHO,KAAD,CAAR;AAKD,GAPD;;AASA,SAAO;AACLjB,IAAAA,SADK;AAELG,IAAAA,YAFK;AAGLE,IAAAA,mBAHK;AAILT,IAAAA,SAJK;AAKLoB,IAAAA,gBALK;AAMLN,IAAAA,cANK;AAOLZ,IAAAA,QAPK;AAQLD,IAAAA,QARK;AASLS,IAAAA;AATK,GAAP;AAWD,CA9DD;;GAAMX,O;;AAgEN,eAAeA,OAAf","sourcesContent":["import { useContext } from \"react\";\nimport { CartContext } from \"../contexts/CartContext\";\nimport { ProductContext } from \"../contexts/ProductContext\";\nimport { IProduct } from \"../utils/interfaces\";\n\nconst useCart = () => {\n  const { cartItems, dispatch, currency } = useContext(CartContext);\n  const { getProducts } = useContext(ProductContext);\n\n  const doAddItem = (product: IProduct) => {\n    dispatch({\n      type: \"add_item\",\n      product,\n    });\n  };\n\n  const doRemoveItem = (id: number) => {\n    dispatch({\n      type: \"remove_item\",\n      id,\n    });\n  };\n\n  const doDecrementQuantity = (id: number) => {\n    dispatch({\n      type: \"decrement_item\",\n      id,\n    });\n  };\n\n  const doIncrementQuantity = (id: number) => {\n    const currentProduct = cartItems.find((item) => item.product.id === id);\n    if (currentProduct) {\n      dispatch({\n        type: \"add_item\",\n        product: currentProduct.product,\n      });\n    }\n  };\n\n  const doGetCartTotal = (): number => {\n    return cartItems.reduce<number>(\n      (acc, cur) => (acc += cur.product.price * cur.quantity),\n      0\n    );\n  };\n\n  const doChangeCurrency = async (currency: string) => {\n    const products: IProduct[] = await getProducts(currency);\n    dispatch({\n      type: \"change_currency\",\n      currency,\n      products,\n    });\n  };\n\n  return {\n    doAddItem,\n    doRemoveItem,\n    doDecrementQuantity,\n    cartItems,\n    doChangeCurrency,\n    doGetCartTotal,\n    currency,\n    dispatch,\n    doIncrementQuantity,\n  };\n};\n\nexport default useCart;\n"]},"metadata":{},"sourceType":"module"}