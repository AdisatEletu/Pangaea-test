{"ast":null,"code":"var _jsxFileName = \"/Users/softcom/Documents/Pangaea-test/src/contexts/CartContext.tsx\",\n    _s = $RefreshSig$();\n\nimport produce from \"immer\";\nimport React, { createContext, useReducer } from \"react\";\nimport { DEFAULT_CURRENCY } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_item\":\n      const product = state.cartItems.find(item => item.product.id === action.product.id);\n\n      if (product) {\n        product.quantity = ++product.quantity;\n      } else {\n        state.cartItems.push({\n          product: action.product,\n          quantity: 1\n        });\n      }\n\n      break;\n\n    case \"remove_item\":\n      state.cartItems = state.cartItems.filter(item => item.product.id !== action.id);\n      break;\n\n    case \"change_currency\":\n      let updatedCart = [];\n\n      if (action.products) {\n        if (state.cartItems && state.cartItems.length > 0) {\n          state.cartItems.forEach(cartItem => {\n            let match = action.products.find(product => product.id === cartItem.product.id);\n\n            if (match) {\n              updatedCart.push({ ...cartItem,\n                product: { ...cartItem.product,\n                  price: match.price\n                }\n              });\n            }\n          });\n        }\n      }\n\n      state = { ...state,\n        currency: action.currency,\n        cartItems: updatedCart\n      };\n      return state;\n\n    case \"decrement_item\":\n      const decrementProduct = state.cartItems.find(item => item.product.id === action.id);\n\n      if (decrementProduct) {\n        if (decrementProduct.quantity === 1) {\n          state.cartItems = state.cartItems.filter(item => item.product.id !== action.id);\n        } else {\n          decrementProduct.quantity = --decrementProduct.quantity;\n        }\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n};\n\nconst CartContextProvider = props => {\n  _s();\n\n  var _state$currency;\n\n  const [state, dispatch] = useReducer(produce(reducer), {\n    cartItems: [],\n    currency: DEFAULT_CURRENCY\n  });\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems: state.cartItems,\n      currency: (_state$currency = state.currency) !== null && _state$currency !== void 0 ? _state$currency : DEFAULT_CURRENCY,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartContextProvider, \"2VeJZBt0Cx4qPWHkIHO1ny8zATQ=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/softcom/Documents/Pangaea-test/src/contexts/CartContext.tsx"],"names":["produce","React","createContext","useReducer","DEFAULT_CURRENCY","CartContext","reducer","state","action","type","product","cartItems","find","item","id","quantity","push","filter","updatedCart","products","length","forEach","cartItem","match","price","currency","decrementProduct","CartContextProvider","props","dispatch","children"],"mappings":"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","sourcesContent":["import produce from \"immer\";\nimport React, { createContext, useReducer, Reducer } from \"react\";\nimport { DEFAULT_CURRENCY } from \"../utils/constants\";\nimport { ICartContextProps, ICartItem, ICartState } from \"../utils/interfaces\";\nimport { CartAction } from \"../utils/types\";\n\nexport const CartContext = createContext({} as ICartContextProps);\n\nconst reducer = (state: ICartState, action: CartAction) => {\n  switch (action.type) {\n    case \"add_item\":\n      const product = state.cartItems.find(\n        (item) => item.product.id === action.product.id\n      );\n      if (product) {\n        product.quantity = ++product.quantity;\n      } else {\n        state.cartItems.push({ product: action.product, quantity: 1 });\n      }\n      break;\n    case \"remove_item\":\n      state.cartItems = state.cartItems.filter(\n        (item) => item.product.id !== action.id\n      );\n      break;\n    case \"change_currency\":\n      let updatedCart = [] as ICartItem[];\n      if (action.products) {\n        if (state.cartItems && state.cartItems.length > 0) {\n          state.cartItems.forEach((cartItem) => {\n            let match = action.products.find(\n              (product) => product.id === cartItem.product.id\n            );\n            if (match) {\n              updatedCart.push({\n                ...cartItem,\n                product: { ...cartItem.product, price: match.price },\n              });\n            }\n          });\n        }\n      }\n      state = { ...state, currency: action.currency, cartItems: updatedCart };\n      return state;\n    case \"decrement_item\":\n      const decrementProduct = state.cartItems.find(\n        (item) => item.product.id === action.id\n      );\n      if (decrementProduct) {\n        if (decrementProduct.quantity === 1) {\n          state.cartItems = state.cartItems.filter(\n            (item) => item.product.id !== action.id\n          );\n        } else {\n          decrementProduct.quantity = --decrementProduct.quantity;\n        }\n      }\n      break;\n    default:\n      return state;\n  }\n};\nconst CartContextProvider = (props: any) => {\n  const [state, dispatch] = useReducer<Reducer<ICartState, CartAction>>(\n    produce(reducer),\n    {\n      cartItems: [],\n      currency: DEFAULT_CURRENCY,\n    }\n  );\n\n  const { children } = props;\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems: state.cartItems,\n        currency: state.currency ?? DEFAULT_CURRENCY,\n        dispatch,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}