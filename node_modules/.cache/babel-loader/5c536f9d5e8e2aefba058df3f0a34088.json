{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext, useState } from \"react\";\nimport { ProductContext } from \"../contexts/ProductContext\";\nimport { DEFAULT_CURRENCY } from \"../utils/constants\";\n\nconst useProducts = () => {\n  _s();\n\n  const {\n    getProducts,\n    products\n  } = useContext(ProductContext);\n  const [loadingProducts, setLoadingProducts] = useState(true);\n  const doFetchProducts = useCallback(async currency => {\n    setLoadingProducts(true);\n    await getProducts(currency !== null && currency !== void 0 ? currency : DEFAULT_CURRENCY);\n    setLoadingProducts(false);\n  }, [getProducts]); // const updateProducts = (products: IProduct[]) => {\n  //   console.log(\"Updating products\");\n  //   setProducts([]);\n  // };\n\n  return {\n    loadingProducts,\n    getProducts,\n    products,\n    doFetchProducts\n  };\n};\n\n_s(useProducts, \"PKu+GPSipJqBMYeuTxGd5Na9c9Y=\");\n\nexport default useProducts;","map":{"version":3,"sources":["/Users/softcom/Documents/pangea-test/src/hooks/useProducts.tsx"],"names":["useCallback","useContext","useState","ProductContext","DEFAULT_CURRENCY","useProducts","getProducts","products","loadingProducts","setLoadingProducts","doFetchProducts","currency"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MACJN,UAAU,CAAuBE,cAAvB,CADZ;AAEA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAU,IAAV,CAAtD;AAEA,QAAMQ,eAAe,GAAGV,WAAW,CACjC,MAAOW,QAAP,IAA6B;AAC3BF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,UAAMH,WAAW,CAACK,QAAD,aAACA,QAAD,cAACA,QAAD,GAAaP,gBAAb,CAAjB;AACAK,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GALgC,EAMjC,CAACH,WAAD,CANiC,CAAnC,CALwB,CAcxB;AACA;AACA;AACA;;AAEA,SAAO;AACLE,IAAAA,eADK;AAELF,IAAAA,WAFK;AAGLC,IAAAA,QAHK;AAILG,IAAAA;AAJK,GAAP;AAMD,CAzBD;;GAAML,W;;AA0BN,eAAeA,WAAf","sourcesContent":["import { useCallback, useContext, useState } from \"react\";\nimport { ProductContext } from \"../contexts/ProductContext\";\nimport { DEFAULT_CURRENCY } from \"../utils/constants\";\nimport { IProductContextProps } from \"../utils/interfaces\";\n\nconst useProducts = () => {\n  const { getProducts, products } =\n    useContext<IProductContextProps>(ProductContext);\n  const [loadingProducts, setLoadingProducts] = useState<boolean>(true);\n\n  const doFetchProducts = useCallback(\n    async (currency?: string) => {\n      setLoadingProducts(true);\n      await getProducts(currency ?? DEFAULT_CURRENCY);\n      setLoadingProducts(false);\n    },\n    [getProducts]\n  );\n\n  // const updateProducts = (products: IProduct[]) => {\n  //   console.log(\"Updating products\");\n  //   setProducts([]);\n  // };\n\n  return {\n    loadingProducts,\n    getProducts,\n    products,\n    doFetchProducts,\n  };\n};\nexport default useProducts;\n"]},"metadata":{},"sourceType":"module"}